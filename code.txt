package test;

import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

class SeasonFinder2 {

    private static Map<String, Map<String, String>> datasets;
    private static Map<String, TemperatureInfo> cityTemperatureMap;

    static {
        datasets = new HashMap<>();

        // Data Set 01 - Seasons in Australia (meteorological Seasons)
        Map<String, String> australiaMeteorologicalSeasons = new HashMap<>();
        australiaMeteorologicalSeasons.put("December", "Summer");
        australiaMeteorologicalSeasons.put("January", "Summer");
        australiaMeteorologicalSeasons.put("February", "Summer");
        australiaMeteorologicalSeasons.put("March", "Autumn");
        australiaMeteorologicalSeasons.put("April", "Autumn");
        australiaMeteorologicalSeasons.put("May", "Autumn");
        australiaMeteorologicalSeasons.put("June", "Winter");
        australiaMeteorologicalSeasons.put("July", "Winter");
        australiaMeteorologicalSeasons.put("August", "Winter");
        australiaMeteorologicalSeasons.put("September", "Spring");
        australiaMeteorologicalSeasons.put("October", "Spring");
        australiaMeteorologicalSeasons.put("November", "Spring");
        datasets.put("Australia", australiaMeteorologicalSeasons);

        // Data Set 02 - Seasons in Australia (The Noongar Seasons)
        Map<String, String> australiaNoongarSeasons = new HashMap<>();
        australiaNoongarSeasons.put("December", "Birak");
        australiaNoongarSeasons.put("January", "Birak");
        australiaNoongarSeasons.put("February", "Bunuru");
        australiaNoongarSeasons.put("March", "Bunuru");
        australiaNoongarSeasons.put("April", "Djeran");
        australiaNoongarSeasons.put("May", "Djeran");
        australiaNoongarSeasons.put("June", "Makuru");
        australiaNoongarSeasons.put("July", "Makuru");
        australiaNoongarSeasons.put("August", "Dijiba");
        australiaNoongarSeasons.put("September", "Dijiba");
        australiaNoongarSeasons.put("October", "Kambarang");
        australiaNoongarSeasons.put("November", "Kambarang");
        datasets.put("Australia", australiaNoongarSeasons);

        // Data Set 03 - Seasons by Country
        Map<String, String> spainJapanSeasons = new HashMap<>();
        spainJapanSeasons.put("December", "Winter");
        spainJapanSeasons.put("January", "Winter");
        spainJapanSeasons.put("February", "Winter");
        spainJapanSeasons.put("March", "Spring");
        spainJapanSeasons.put("April", "Spring");
        spainJapanSeasons.put("May", "Spring");
        spainJapanSeasons.put("June", "Summer");
        spainJapanSeasons.put("July", "Summer");
        spainJapanSeasons.put("August", "Summer");
        spainJapanSeasons.put("September", "Autumn");
        spainJapanSeasons.put("October", "Autumn");
        spainJapanSeasons.put("November", "Autumn");
        datasets.put("Spain", spainJapanSeasons);

        // Data Set 04 - Seasons by Country
        Map<String, String> mauritiusSeasons = new HashMap<>();
        mauritiusSeasons.put("November", "Summer");
        mauritiusSeasons.put("April", "Summer");
        mauritiusSeasons.put("May", "Autumn");
        mauritiusSeasons.put("June", "Winter");
        mauritiusSeasons.put("July", "Winter");
        mauritiusSeasons.put("August", "Winter");
        mauritiusSeasons.put("September", "Spring");
        mauritiusSeasons.put("October", "Spring");
        datasets.put("Mauritius", mauritiusSeasons);

        // Data Set 05 - Seasons by Country
        Map<String, String> malaysiaSriLankaSeasons = new HashMap<>();
        malaysiaSriLankaSeasons.put("January", "Northeast Monsoon");
        malaysiaSriLankaSeasons.put("February", "Northeast Monsoon");
        malaysiaSriLankaSeasons.put("March", "Inter-Monsoon");
        malaysiaSriLankaSeasons.put("April", "Inter-Monsoon");
        malaysiaSriLankaSeasons.put("May", "Southeast Monsoon");
        malaysiaSriLankaSeasons.put("September", "Southeast Monsoon");
        malaysiaSriLankaSeasons.put("October", "Inter-Monsoon");
        malaysiaSriLankaSeasons.put("November", "Inter-Monsoon");
        datasets.put("Sri Lanka", malaysiaSriLankaSeasons);

        // Data Set 05 - Temperature Information
        cityTemperatureMap = new HashMap<>();
        cityTemperatureMap.put("Perth", new TemperatureInfo(0.7, 46.0, 18.2, 23.0));
        cityTemperatureMap.put("Adelaide", new TemperatureInfo(-1.0, 49.0, 16.5, 21.0));

    }

    public static void main(String[] args) {
        //main Menu
        Scanner scanner = new Scanner(System.in);
        System.out.println("Welcome to the Weather App.....!\n");
        System.out.println("1. Find the season of a country and month");
        System.out.println("2. Check temperature against city averages");
        System.out.println("3. Exit");
        System.out.println("Please select an option:");

        int choice = scanner.nextInt();
        scanner.nextLine(); // Consume the newline character

        switch (choice) {
            case 1:
                findCountrySeason(scanner);
                break;
            case 2:
                try {
                checkTemperatureAgainstAverage(scanner);
            } catch (Exception e) {
                System.out.println("Enter Numbers Only");
            }

            break;
            case 3:
                System.out.println("Thank you for using the Weather App. Goodbye!");
                return;
            default:
                System.out.println("Invalid choice. Please try again.");
        }

    }

    private static void findCountrySeason(Scanner scanner) {
        try (scanner) {
            boolean exitProgram = false;
            System.out.println("\nEnter the name of the country (e.g., 'Australia'):");
            System.out.println("Or enter 'q' to quit.");

            while (!exitProgram) {
                String input = scanner.nextLine();
                if ("Malaysia".equals(input)) {
                    input = "Sri Lanka";
                } else if ("Japan".equals(input)) {
                    input = "Spain";
                }
                if (input.equalsIgnoreCase("q")) {
                    System.out.println("Exiting...");
                    exitProgram = true;
                    continue;
                }

                if (!datasets.containsKey(input)) {
                    System.out.println("Country not found. Please try again.");
                    continue;
                }

                Map<String, String> selectedDataset = datasets.get(input);

                boolean backToMainMenu = false;
                boolean back = false;
                while (!backToMainMenu) {
                    if (input.equals("Australia")) {

                        System.out.println("Please select an option:");
                        System.out.println("1. Meteorological Seasons");
                        System.out.println("2. The Noongar Seasons");
                        System.out.println("3. Back");
                        System.out.println("4. Go to Main Menu");
                        System.out.println("5. quit.");

                        System.out.println("Enter your choice: ");
                        String choice = scanner.nextLine();

                        switch (choice) {
                            case "1":
                                System.out.println("Enter the month: ");
                                String month = scanner.nextLine();

                                String meteorologicalSeason = selectedDataset.get(month);
                                if (meteorologicalSeason != null) {
                                    System.out.println("Month: " + month);
                                    System.out.println("Meteorological Season: " + meteorologicalSeason);
                                    System.out.println("-----------------------------------------");
                                } else {
                                    System.out.println("Invalid month. Please try again.");
                                }
                                break;
                            case "2":
                                System.out.println("Enter the month: ");
                                String noongarMonth = scanner.nextLine();

                                String noongarSeason = selectedDataset.get(noongarMonth);
                                if (noongarSeason != null) {
                                    System.out.println("Month: " + noongarMonth);
                                    System.out.println("Noongar Season: " + noongarSeason);
                                    System.out.println("-----------------------------------------");
                                } else {
                                    System.out.println("Invalid month. Please try again.");
                                }
                                break;
                            case "3":
                                System.out.println("\nEnter the name of the country (e.g., 'Australia'):");
                                System.out.println("Or enter 'q' to quit.");
                                backToMainMenu = true;
                                back = true;
                                break;

                            case "4": {
                                String[] args = null;
                                main(args);
                            }
                            exitProgram = true;
                            backToMainMenu = true;
                            back = true;
                            break;

                            case "5":
                                System.out.println("Exiting...");
                                exitProgram = true;
                                backToMainMenu = true;
                                back = true;
                                break;
                            default:
                                System.out.println("Invalid choice. Please try again.");
                        }
                    } else {
                        System.out.println("Enter the month: ");
                        String month = scanner.nextLine();

                        String Season = selectedDataset.get(month);
                        if (Season != null) {
                            System.out.println("Month: " + month);
                            System.out.println("The Season: " + Season);
                            System.out.println("-----------------------------------------");
                        } else {
                            System.out.println("Invalid month. Please try again.");
                        }
                        backToMainMenu = true;
                    }
                    if (!back && backToMainMenu) {
                        System.out.println("Continue this (Yes/No)?");
                        String continueChoice = scanner.nextLine();
                        if (continueChoice.equalsIgnoreCase("yes")) {
                            System.out.println("\nEnter the name of the country (e.g., 'Australia'):");
                            System.out.println("Or enter 'q' to quit.");
                        } else if (continueChoice.equalsIgnoreCase("no")) {
                            System.out.println("Exiting...");
                            exitProgram = true;
                        } else {
                            System.out.println("Invalid choice. Exiting...");
                            exitProgram = true;
                        }
                    }
                    back = false;
                }
            }
        }
    }

    private static void checkTemperatureAgainstAverage(Scanner scanner) {
        System.out.println("Enter the name of the city:");
        String city = scanner.nextLine();

        if (cityTemperatureMap.containsKey(city)) {
            TemperatureInfo temperatureInfo = cityTemperatureMap.get(city);
            System.out.println("Enter the temperature reading:");
            try {
                double temperature = scanner.nextDouble();
                scanner.nextLine();

                if (temperature >= temperatureInfo.getMinTemperature() && temperature <= temperatureInfo.getMaxTemperature()) {
                    System.out.println("The temperature in " + city + " is within the possible average range.");
                } else {
                    System.out.println("The temperature in " + city + " is outside the possible average range.");
                }

                System.out.println("Enter the temperature reading time (Morning/Afternoon):");
                System.out.println("If morning , enter 'm' & If afternoon , enter 'a' ");
                String time = scanner.nextLine();
                double differenceTemp = 0;
                if (time.equals("m")) {
                    if (temperature > temperatureInfo.getMeanMorningTemperature()) {
                        System.out.println("The temperature reading is above the average temperature of a " + city);
                        differenceTemp = temperature - temperatureInfo.getMeanMorningTemperature();
                        System.out.println("Difference of temprature rangers : " + differenceTemp + "⁰C.");
                    } else if (temperature == temperatureInfo.getMeanMorningTemperature()) {
                        System.out.println("The temperature reading is equal the average temperature of a " + city);
                        differenceTemp = temperature - temperatureInfo.getMeanMorningTemperature();
                        System.out.println("Difference of temprature rangers : " + differenceTemp + "⁰C.");
                    } else if (temperature < temperatureInfo.getMeanMorningTemperature()) {
                        System.out.println("The temperature reading is below the average temperature of a " + city);
                        differenceTemp = temperatureInfo.getMeanMorningTemperature() - temperature;
                        System.out.println("Difference of temprature rangers : " + differenceTemp + "⁰C.");
                    }
                } else if (time.equals("a")) {
                    if (temperature > temperatureInfo.getMeanAfternoonTemperature()) {
                        System.out.println("The temperature reading is above the average temperature of a " + city);
                        differenceTemp = temperature - temperatureInfo.getMeanAfternoonTemperature();
                        System.out.println("Difference of temprature rangers : " + differenceTemp + "⁰C.");
                    } else if (temperature == temperatureInfo.getMeanAfternoonTemperature()) {
                        System.out.println("The temperature reading is equal the average temperature of a " + city);
                        differenceTemp = temperature - temperatureInfo.getMeanAfternoonTemperature();
                        System.out.println("Difference of temprature rangers : " + differenceTemp + "⁰C.");
                    } else if (temperature < temperatureInfo.getMeanAfternoonTemperature()) {
                        System.out.println("The temperature reading is below the average temperature of a " + city);
                        differenceTemp = temperatureInfo.getMeanAfternoonTemperature() - temperature;
                        System.out.println("Difference of temprature rangers : " + differenceTemp + "⁰C.");
                    }
                } else {
                    System.out.println("Plese enter correct word");
                }

                if (differenceTemp > 5) {
                    System.out.println("The differance of temprature is more than 5⁰C.");
                }
            } catch (NumberFormatException e) {
                System.out.println("Enter Numbers Only");
            }

        } else {
            System.out.println("Temperature information not available for " + city);
        }
    }
}

class TemperatureInfo {

    private final double minTemperature;
    private final double maxTemperature;
    private final double MeanMorningTemperature;
    private final double MeanAfternoonTemperature;

    public TemperatureInfo(double minTemperature, double maxTemperature, double MeanMorningTemperature, double MeanAfternoonTemperature) {
        this.minTemperature = minTemperature;
        this.maxTemperature = maxTemperature;
        this.MeanMorningTemperature = MeanMorningTemperature;
        this.MeanAfternoonTemperature = MeanAfternoonTemperature;
    }

    public double getMinTemperature() {
        return minTemperature;
    }

    public double getMaxTemperature() {
        return maxTemperature;
    }

    public double getMeanMorningTemperature() {
        return MeanMorningTemperature;
    }

    public double getMeanAfternoonTemperature() {
        return MeanAfternoonTemperature;
    }
}
